ifneq ($(TARGET_SIMULATOR),true)
LOCAL_PATH := $(call my-dir)

#bin
#eglconfigs
include $(CLEAR_VARS)
LOCAL_MODULE := eglconfigs
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/eglconfigs
include $(BUILD_PREBUILT)


include $(CLEAR_VARS)
LOCAL_MODULE := pvrdebug
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrdebug
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrhwperf
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrhwperf
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrlogdump
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrlogdump
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrlogsplit
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrlogsplit
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrtld
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrtld
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrhtb2txt
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrhtb2txt
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := pvrhtbd
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/pvrhtbd
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE := rscompiler
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/bin
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/bin/rscompiler
include $(BUILD_PREBUILT)

#egl
include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libEGL_POWERVR_ROGUE.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/egl
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/egl
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/egl/libEGL_POWERVR_ROGUE.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/egl/libEGL_POWERVR_ROGUE.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libGLESv1_CM_POWERVR_ROGUE.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/egl
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/egl
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/egl/libGLESv1_CM_POWERVR_ROGUE.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/egl/libGLESv1_CM_POWERVR_ROGUE.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libGLESv2_POWERVR_ROGUE.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/egl
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/egl
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/egl/libGLESv2_POWERVR_ROGUE.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/egl/libGLESv2_POWERVR_ROGUE.so
include $(BUILD_PREBUILT)

#hw
include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
ifeq ($(strip $(TARGET_BOARD_PLATFORM)),)
LOCAL_MODULE := gralloc.default.so
else
LOCAL_MODULE := gralloc.$(TARGET_BOARD_PLATFORM).so
endif
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/hw
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/hw
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/hw/gralloc.generic.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/hw/gralloc.generic.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := memtrack.$(TARGET_BOARD_PLATFORM).so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/hw
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/hw
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/hw/memtrack.generic.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/hw/memtrack.generic.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := vulkan.$(TARGET_BOARD_PLATFORM).so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib/hw
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64/hw
LOCAL_MULTILIB := both
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/hw/vulkan.generic.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/hw/vulkan.generic.so
include $(BUILD_PREBUILT)

#lib/lib64
include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libcreatesurface.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libcreatesurface.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libcreatesurface.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libglslcompiler.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libglslcompiler.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libglslcompiler.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libIMGegl.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libIMGegl.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libIMGegl.so
include $(BUILD_PREBUILT)

#include $(CLEAR_VARS)
#LOCAL_MODULE_TAGS := optional
#LOCAL_MODULE := libpvrANDROID_WSEGL.so
#LOCAL_MODULE_CLASS := SHARED_LIBRARIES
#LOCAL_MULTILIB := both
#LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
#LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
#LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libpvrANDROID_WSEGL.so
#LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libpvrANDROID_WSEGL.so
#include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libPVRScopeServices.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libPVRScopeServices.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libPVRScopeServices.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libsrv_um.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libsrv_um.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libsrv_um.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libsutu_display.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libsutu_display.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libsutu_display.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libusc.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libusc.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libusc.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libPVRRS.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libPVRRS.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libPVRRS.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libtqvalidate.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libtqvalidate.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libtqvalidate.so
include $(BUILD_PREBUILT)

include $(CLEAR_VARS)
LOCAL_MODULE_TAGS := optional
LOCAL_MODULE := libufwriter.so
LOCAL_MODULE_CLASS := SHARED_LIBRARIES
LOCAL_MULTILIB := both
LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
LOCAL_SRC_FILES_32 :=  usr/$(MALI_PLATFORM_NAME)/lib/libufwriter.so
LOCAL_SRC_FILES_64 :=  usr/$(MALI_PLATFORM_NAME)/lib64/libufwriter.so
include $(BUILD_PREBUILT)

#special files
ifeq ($(strip $(MALI_PLATFORM_NAME)),sharkl3)
include $(CLEAR_VARS)
LOCAL_MODULE := rgx.fw.signed.22.86.104.218
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/firmware
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/firmware/rgx.fw.signed.22.86.104.218
LOCAL_POST_INSTALL_CMD = $(hide)\
    ln -sf $(notdir ./$(LOCAL_INSTALLED_MODULE)) $(dir $(LOCAL_INSTALLED_MODULE))/rgx.fw.22.86.104.218;
include $(BUILD_PREBUILT)
else ifeq ($(strip $(MALI_PLATFORM_NAME)),sharkl5)
include $(CLEAR_VARS)
LOCAL_MODULE := rgx.fw.signed.22.102.54.38
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/firmware
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/firmware/rgx.fw.signed.22.102.54.38
LOCAL_POST_INSTALL_CMD = $(hide)\
    ln -sf $(notdir ./$(LOCAL_INSTALLED_MODULE)) $(dir $(LOCAL_INSTALLED_MODULE))/rgx.fw.22.102.54.38;
include $(BUILD_PREBUILT)
else ifeq ($(strip $(MALI_PLATFORM_NAME)),roc1)
include $(CLEAR_VARS)
LOCAL_MODULE := rgx.fw.signed.24.50.208.504
LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_PATH := $(TARGET_OUT_VENDOR)/firmware
LOCAL_SRC_FILES :=  usr/$(MALI_PLATFORM_NAME)/firmware/rgx.fw.signed.24.50.208.504
LOCAL_POST_INSTALL_CMD = $(hide)\
    ln -sf $(notdir ./$(LOCAL_INSTALLED_MODULE)) $(dir $(LOCAL_INSTALLED_MODULE))/rgx.fw.24.50.208.504;
include $(BUILD_PREBUILT)
else
$(warning  "$(MALI_PLATFORM_NAME) No rogue gpu firmware.")
endif


# !!!!#### this is a workaround methods for Android9.0, will be reverted when new gpu driver is OK.
#include $(CLEAR_VARS)
#LOCAL_MODULE_TAGS := optional
#LOCAL_MODULE := libdrm2.so
#LOCAL_MODULE_CLASS := SHARED_LIBRARIES
#LOCAL_MULTILIB := both
#LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
#LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
#LOCAL_SRC_FILES_32 :=  tmp/lib/libdrm.so
#LOCAL_SRC_FILES_64 :=  tmp/lib64/libdrm.so
#include $(BUILD_PREBUILT)

#include $(CLEAR_VARS)
#LOCAL_MODULE_TAGS := optional
#LOCAL_MODULE := libutils.so
#LOCAL_MODULE_CLASS := SHARED_LIBRARIES
#LOCAL_MULTILIB := both
#LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
#LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
#LOCAL_SRC_FILES_32 :=  tmp/lib/libutils.so
#LOCAL_SRC_FILES_64 :=  tmp/lib64/libutils.so
#include $(BUILD_PREBUILT)


#include $(CLEAR_VARS)
#LOCAL_MODULE_TAGS := optional
#LOCAL_MODULE := libstdc++2.so
#LOCAL_MODULE_CLASS := SHARED_LIBRARIES
#LOCAL_MULTILIB := both
#LOCAL_MODULE_PATH_32 := $(TARGET_OUT_VENDOR)/lib
#LOCAL_MODULE_PATH_64 := $(TARGET_OUT_VENDOR)/lib64
#LOCAL_SRC_FILES_32 :=  tmp/lib/libstdc++.so
#LOCAL_SRC_FILES_64 :=  tmp/lib64/libstdc++.so
#include $(BUILD_PREBUILT)

$(shell mkdir -p $(TARGET_OUT_VENDOR)/lib)
$(shell mkdir -p $(TARGET_OUT_VENDOR)/lib64)
$(shell cp -rf $(LOCAL_PATH)/tmp/lib/libdrm.so $(TARGET_OUT_VENDOR)/lib/libdrm.so)
$(shell cp -rf $(LOCAL_PATH)/tmp/lib64/libdrm.so $(TARGET_OUT_VENDOR)/lib64/libdrm.so)

# !!!!! ##### WA end


#include $(LOCAL_PATH)/precompiler.mk



endif
